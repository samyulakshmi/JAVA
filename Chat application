CLIENT SIDE PROGRAM
import java.io.*; 
import java.net.*; 
  
class Client { 
  
    public static void main(String args[]) throws Exception 
    { 
  
        // Creating client socket 
        Socket s = new Socket("localhost", 888); 
  
        // sending data to the server 
        DataOutputStream dos = new DataOutputStream(s.getOutputStream()); 
  
        // reading data coming from the server 
        BufferedReader br = new BufferedReader(new InputStreamReader(s.getInputStream())); 
  
        // reading data from the keyboard 
        BufferedReader kb = new BufferedReader(new InputStreamReader(System.in)); 
        String str, str1; 
  
        // repeat as long as exit is not typed at client 
        while (!(str = kb.readLine()).equals("exit")) 
		{ 
  
            // send to the server 
            dos.writeBytes(str + "\n"); 
  
            // receive from the server 
            str1 = br.readLine(); 
			System.out.print("Server:	");
            System.out.println(str1); 
        } 
  
        // close connection. 
        dos.close(); 
        br.close(); 
        kb.close(); 
        s.close(); 
    } 
}
SERVER SIDE PROGRAM
import java.io.*; 
import java.net.*; 
  
class Server { 
  
    public static void main(String args[]) throws Exception 
    { 
  
        // Creating server Socket 
        ServerSocket ss = new ServerSocket(888); 
  
        // connecting to client socket 
        Socket s = ss.accept(); 
        System.out.println("Connection established"); 
  
        // sending data to the client 
        PrintStream ps = new PrintStream(s.getOutputStream()); 
  
        // reading data coming from the client 
        BufferedReader br = new BufferedReader(new InputStreamReader(s.getInputStream())); 
  
        // reading data from the keyboard 
        BufferedReader kb = new BufferedReader(new InputStreamReader(System.in)); 
  
        // server executes continuously 
        while (true) 
		{ 
  
            String str, str1;  
  
            // read from client 
            while ((str = br.readLine()) != null) { 
                System.out.print("Client:	");
				System.out.println(str); 
                str1 = kb.readLine(); 
  
                // send to client
                ps.println(str1); 
            } 
  
            // close connection 
            ps.close(); 
            br.close(); 
            kb.close(); 
            ss.close(); 
            s.close(); 
  
            // terminate application 
            System.exit(0); 
  
        } // end of while 
    } 
}

